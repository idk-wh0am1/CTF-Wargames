from pwn import *
from string import *
from tqdm import tqdm

b64table = ascii_uppercase + ascii_lowercase + digits + "+/"
context.log_level = 'error'

flag = ''
len_flag = 25
for j in range(len_flag):
    votes = {}
    
    for _ in range(10):
        keys = []
        io = remote("challs.dantectf.it", 31510)
        # io = process(["python", "DIYenc.py"])

        io.recvuntil(b"Encrypted flag = ")
        enc_flag = bytes.fromhex(io.recvline().strip().decode())

        ciphertexts = []
        for i in range(7):
            io.sendlineafter(b"> ", b"60")
            io.recvuntil(b"ct = ")
            enc = bytes.fromhex(io.recvline().strip().decode())
            ciphertexts += [enc]
        io.close()

        for k in range(256):
            ok = 0
            for c in ciphertexts:
                if chr(c[j] ^ k) in b64table:
                    ok += 1
            if ok == 7:
                keys += [k]
        
        for k in keys:
            b = chr(k ^ enc_flag[j])
            if b in printable:
                if b in votes:
                    votes[b] += 1
                else:
                    votes[b] = 1
    for b in votes:
        if votes[b] == 10:
            flag += b
            break
    print(flag)