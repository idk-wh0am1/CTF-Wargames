# encrypt(m)
# c1 = g^k      [mod p]
# c2 = m*g^(ak) [mod p]

# decrypt(c1, c2)
# m  = c2 / (c1 ^ a) [mod p]

from pwn import *
from Crypto.Util.number import long_to_bytes

io = remote("morphing.chal.uiuc.tf", 1337)

g = 2
io.recvuntil(b"A = ")
A = int(io.recvline())

io.sendlineafter(b"c1_ = ", str(g).encode())
io.sendlineafter(b"c2_ = ", str(A).encode())

io.recvuntil(b"m = ")
flag = long_to_bytes(int(io.recvline()))
print(flag)